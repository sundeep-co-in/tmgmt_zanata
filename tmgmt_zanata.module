<?php

/**
 * @file
 * Module file for translation management Zanata module.
 *
 * http://zanata.org/
 *
 * Implemented by David Mason damason@redhat.com
 */

/**
 * Implements hook_tmgmt_translator_plugin_info()
 */
function tmgmt_zanata_tmgmt_translator_plugin_info() {
  return array(
    'zanata' => array(
      'label' => t('Zanata translator'),
      'description' => t('Service to translate strings with Zanata'),
      'plugin controller class' => 'TMGMTZanataTranslatorPluginController',
      'ui controller class' => 'TMGMTZanataTranslatorUIController',
      'auto create' => TRUE, // FIXME make sure auto create works properly
      // TODO look at other settings on the hook page
    ),
  );
}


/**
 * Callback used to poll for translations in the UI checkoutInfo form
 */
function tmgmt_zanata_poll_translations($form, &$form_state) {
  watchdog('tmgmt_zanata', 'Called tmgmt_zanata_poll_translations');
  // FIXME remove duplication between this and requestTranslation()

  $job = $form_state['tmgmt_job'];

  $server_url = 'http://localhost:8080/zanata';
  $project_id = 'drupal-test';
  $version_id = '1';

  $base_url = "{$server_url}/rest/projects/p/{$project_id}/iterations/i/{$version_id}/r";

  foreach ($job->getItems() as $job_item) {
    $doc_id = $job_item->item_type . $job_item->item_id;
    $encoded_id = drupal_encode_path($doc_id);
    $url = "{$base_url}/{$encoded_id}/translations/de"; // TODO use appropriate language for the job

    $options = array(
      'headers' => array(
        'Accept' => 'application/json',
      ),
    );

    $response = drupal_http_request($url, $options);

    // FIXME server returns 404 for documents that have no translations,
    //       handle this more sensibly.
    if ($response->code != 200) {
      drupal_set_message(t('There was a problem fetching translations from the service. See MESSAGES below.'), 'warning', FALSE);
      $job_item->addMessage('Tried to update translations but got response code @code.',
                            array('@code' => $response->code));
    } else {
      $data = drupal_json_decode($response->data);
      $targets = $data['textFlowTargets'];

      $translated = array();
      foreach ($targets as $target) {
        // TODO map Zanata states sensibly to TMGMT states
        if ($target['state'] == 'Approved') {
          $key = (string) $target['resId'];
          $translated[$key]['#text'] = (string) $target['content'];
        }
      }

      $expanded_translated = tmgmt_unflatten_data($translated);
      $job_item->addTranslatedData($expanded_translated);
    }
  }
}
